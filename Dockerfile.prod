FROM node:16.2.0-alpine3.13 AS build-stage


## install global packages
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global
RUN npm install npm@latest -g
RUN npm install react-scripts@4.0.3 -g

## set working directory & give permissions to user `node`
RUN mkdir -p /usr/src/app && chown -R node:node /usr/src/app
WORKDIR /usr/src/app

## switch to non-root user & install dependencies
USER node
COPY --chown=node:node package.json .
COPY --chown=node:node package-lock.json .
ENV PATH /usr/src/app/node_modules/.bin:$PATH
ENV PATH=$PATH:/home/node/.npm-global/bin 
RUN npm ci

## set environment to production, overwrite
## with docker-compose
ARG NODE_ENV=production
ENV NODE_ENV $NODE_ENV

COPY --chown=node:node . .
RUN npm run build

# # Stage 2 - create static file app server

# ## Caddy version (broken)
# ## https://github.com/docker-library/docs/tree/master/caddy

# FROM caddy:2.3
# # COPY ./conf/Caddyfile /etc/caddy/Caddyfile
# COPY --from=build-stage /usr/src/app/build /var/www/html
# CMD ["caddy", "run"]


# nginx version (working)

FROM nginx:stable-alpine
COPY --from=build-stage /usr/src/app/build /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]